{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/UserPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PostDetailsModal from \"./PostDetailModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  posts\n}) => {\n  _s();\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handlePostClick = post => {\n    setSelectedPost(post);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border\",\n      style: {\n        marginLeft: \"0px\",\n        height: \"270px\"\n      },\n      children: [posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-card inline ${index % 3 === 2 ? \"last-post\" : \"\"}`,\n        style: {\n          display: \"inline-block\",\n          width: \"28%\",\n          margin: \"10px\",\n          padding: \"10px\",\n          border: \"1px solid black\",\n          borderRadius: \"10px\",\n          height: \"300px\",\n          cursor: \"pointer\" // Add this to make the card clickable\n        },\n\n        onClick: () => handlePostClick(post) // Handle card click\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Post Title :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"16px\",\n            marginBottom: \"5px\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Content :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"14px\",\n            marginBottom: \"5px\"\n          },\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)), posts.length < 3 && renderEmptyPostCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostDetailsModal, {\n      post: selectedPost,\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPosts, \"FJXBOnQOsYn9lZY+a8IZ0LDdviE=\");\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","useState","PostDetailsModal","jsxDEV","_jsxDEV","UserPosts","posts","_s","selectedPost","setSelectedPost","isModalOpen","setIsModalOpen","handlePostClick","post","className","children","style","marginLeft","height","map","index","display","width","margin","padding","border","borderRadius","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","title","body","id","length","renderEmptyPostCards","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/UserPost.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PostDetailsModal from \"./PostDetailModel\";\n\nconst UserPosts = ({ posts }) => {\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handlePostClick = (post) => {\n    setSelectedPost(post);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"user-posts\">\n      <div className=\"border\" style={{ marginLeft: \"0px\", height: \"270px\" }}>\n        {posts.map((post, index) => (\n          <div\n            key={post.id}\n            className={`post-card inline ${index % 3 === 2 ? \"last-post\" : \"\"}`}\n            style={{\n              display: \"inline-block\",\n              width: \"28%\",\n              margin: \"10px\",\n              padding: \"10px\",\n              border: \"1px solid black\",\n              borderRadius: \"10px\",\n              height: \"300px\",\n              cursor: \"pointer\", // Add this to make the card clickable\n            }}\n            onClick={() => handlePostClick(post)} // Handle card click\n          >\n            <h4>Post Title :</h4>\n            <p style={{ fontSize: \"16px\", marginBottom: \"5px\" }}>{post.title}</p>\n            <h4>Content :</h4>\n            <p style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>{post.body}</p>\n          </div>\n        ))}\n        {posts.length < 3 && renderEmptyPostCards()}\n      </div>\n\n      <PostDetailsModal\n        post={selectedPost}\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default UserPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}