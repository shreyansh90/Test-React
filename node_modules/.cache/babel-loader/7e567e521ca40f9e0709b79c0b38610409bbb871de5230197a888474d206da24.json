{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/CountryClockSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryClockSelector = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isPaused, setIsPaused] = useState(false);\n\n  // Fetch the list of countries from the API\n  useEffect(() => {\n    fetch('http://worldtimeapi.org/api/timezone').then(response => response.json()).then(data => setCountries(data));\n  }, []);\n\n  // Fetch and update the current time based on the selected country\n  useEffect(() => {\n    if (selectedCountry) {\n      fetch(`http://worldtimeapi.org/api/timezone/${selectedCountry}`).then(response => response.json()).then(data => {\n        const time = new Date(data.utc_datetime);\n        setCurrentTime(time);\n      });\n    }\n  }, [selectedCountry]);\n\n  // Update the clock every second if not paused\n  useEffect(() => {\n    let interval;\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setCurrentTime(prevTime => new Date(prevTime.getTime() + 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isPaused]);\n  const handleCountryChange = event => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n  };\n  const handlePauseStartClick = () => {\n    setIsPaused(prevIsPaused => !prevIsPaused);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-selector\",\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"clock\",\n        children: currentTime.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pause-start\",\n        onClick: handlePauseStartClick,\n        children: isPaused ? 'Start' : 'Pause'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryClockSelector, \"gMXBNAc7eiz4oBAakUy313Cxyv8=\");\n_c = CountryClockSelector;\nexport default CountryClockSelector;\nvar _c;\n$RefreshReg$(_c, \"CountryClockSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountryClockSelector","_s","countries","setCountries","selectedCountry","setSelectedCountry","currentTime","setCurrentTime","Date","isPaused","setIsPaused","fetch","then","response","json","data","time","utc_datetime","interval","setInterval","prevTime","getTime","clearInterval","handleCountryChange","event","country","target","value","handlePauseStartClick","prevIsPaused","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","toLocaleTimeString","hour","minute","second","onClick","_c","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/CountryClockSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CountryClockSelector = () => {\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isPaused, setIsPaused] = useState(false);\n\n  // Fetch the list of countries from the API\n  useEffect(() => {\n    fetch('http://worldtimeapi.org/api/timezone')\n      .then((response) => response.json())\n      .then((data) => setCountries(data));\n  }, []);\n\n  // Fetch and update the current time based on the selected country\n  useEffect(() => {\n    if (selectedCountry) {\n      fetch(`http://worldtimeapi.org/api/timezone/${selectedCountry}`)\n        .then((response) => response.json())\n        .then((data) => {\n          const time = new Date(data.utc_datetime);\n          setCurrentTime(time);\n        });\n    }\n  }, [selectedCountry]);\n\n  // Update the clock every second if not paused\n  useEffect(() => {\n    let interval;\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setCurrentTime((prevTime) => new Date(prevTime.getTime() + 1000));\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isPaused]);\n\n  const handleCountryChange = (event) => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n  };\n\n  const handlePauseStartClick = () => {\n    setIsPaused((prevIsPaused) => !prevIsPaused);\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <h1>Page Title</h1>\n      <div className=\"country-clock\">\n        <select id=\"country-selector\" onChange={handleCountryChange}>\n          <option value=\"\">Select a country</option>\n          {countries.map((country) => (\n            <option key={country} value={country}>\n              {country}\n            </option>\n          ))}\n        </select>\n        <div id=\"clock\">\n          {currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n        </div>\n        <button id=\"pause-start\" onClick={handlePauseStartClick}>\n          {isPaused ? 'Start' : 'Pause'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryClockSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}