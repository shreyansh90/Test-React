{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/CountryClockSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryClockSelector = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [currentTime, setCurrentTime] = useState(new Date()); // Initialize with a default time\n  const [isPaused, setIsPaused] = useState(false);\n  useEffect(() => {\n    // Start the clock\n    if (!isPaused) {\n      const interval = setInterval(() => {\n        setCurrentTime(prevTime => new Date(prevTime.getTime() + 1000));\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPaused]);\n  useEffect(() => {\n    if (selectedCountry) {\n      // Fetch the selected country's time when the component mounts and when the selectedCountry changes\n      fetch(`http://worldtimeapi.org/api/timezone/${selectedCountry}`).then(response => response.json()).then(data => {\n        const time = new Date(data.utc_datetime);\n        setCurrentTime(time);\n      });\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    // Fetch the list of countries when the component mounts\n    fetch('http://worldtimeapi.org/api/timezone').then(response => response.json()).then(data => setCountries(data));\n  }, []);\n  const handleCountryChange = event => {\n    // Get the selected country's area and location\n    const countryData = JSON.parse(event.target.value);\n    setSelectedCountry(`${countryData.area}/${countryData.location}`);\n  };\n  const handlePauseStartClick = () => {\n    setIsPaused(prevIsPaused => !prevIsPaused);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-clock\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-selector\",\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), countries.map(countryData => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: JSON.stringify(countryData),\n          children: countryData.timezone\n        }, countryData.timezone, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"clock\",\n      style: {\n        marginLeft: \"10px\",\n        backgroundColor: \"#0047AB\"\n      },\n      children: currentTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"pause-start\",\n      style: {\n        marginLeft: \"10px\",\n        backgroundColor: \"#7FFFD4\"\n      },\n      onClick: handlePauseStartClick,\n      children: isPaused ? 'Start' : 'Pause'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryClockSelector, \"gMXBNAc7eiz4oBAakUy313Cxyv8=\");\n_c = CountryClockSelector;\nexport default CountryClockSelector;\nvar _c;\n$RefreshReg$(_c, \"CountryClockSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountryClockSelector","_s","countries","setCountries","selectedCountry","setSelectedCountry","currentTime","setCurrentTime","Date","isPaused","setIsPaused","interval","setInterval","prevTime","getTime","clearInterval","fetch","then","response","json","data","time","utc_datetime","handleCountryChange","event","countryData","JSON","parse","target","value","area","location","handlePauseStartClick","prevIsPaused","className","style","display","flexDirection","children","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","stringify","timezone","marginLeft","backgroundColor","toLocaleTimeString","hour","minute","second","onClick","_c","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/CountryClockSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CountryClockSelector = () => {\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [currentTime, setCurrentTime] = useState(new Date()); // Initialize with a default time\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    // Start the clock\n    if (!isPaused) {\n      const interval = setInterval(() => {\n        setCurrentTime((prevTime) => new Date(prevTime.getTime() + 1000));\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [isPaused]);\n\n  useEffect(() => {\n    if (selectedCountry) {\n      // Fetch the selected country's time when the component mounts and when the selectedCountry changes\n      fetch(`http://worldtimeapi.org/api/timezone/${selectedCountry}`)\n        .then((response) => response.json())\n        .then((data) => {\n          const time = new Date(data.utc_datetime);\n          setCurrentTime(time);\n        });\n    }\n  }, [selectedCountry]);\n\n  useEffect(() => {\n    // Fetch the list of countries when the component mounts\n    fetch('http://worldtimeapi.org/api/timezone')\n      .then((response) => response.json())\n      .then((data) => setCountries(data));\n  }, []);\n\n  const handleCountryChange = (event) => {\n    // Get the selected country's area and location\n    const countryData = JSON.parse(event.target.value);\n    setSelectedCountry(`${countryData.area}/${countryData.location}`);\n  };\n\n  const handlePauseStartClick = () => {\n    setIsPaused((prevIsPaused) => !prevIsPaused);\n  };\n\n  return (\n    <div className=\"country-clock\" style={{ display: 'flex', flexDirection: 'row' }}>\n      <div>\n        <select id=\"country-selector\" onChange={handleCountryChange}>\n          <option value=\"\">Select a country</option>\n          {countries.map((countryData) => (\n            <option key={countryData.timezone} value={JSON.stringify(countryData)}>\n              {countryData.timezone}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div id=\"clock\" style={{ marginLeft: \"10px\", backgroundColor: \"#0047AB\" }}>\n        {currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n      </div>\n      <button id=\"pause-start\" style={{ marginLeft: \"10px\", backgroundColor: \"#7FFFD4\" }} onClick={handlePauseStartClick}>\n        {isPaused ? 'Start' : 'Pause'}\n      </button>\n    </div>\n  );\n};\n\nexport default CountryClockSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}