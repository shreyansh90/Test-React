{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/UserPost.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  posts\n}) => {\n  const renderEmptyPostCards = () => {\n    const emptyPostCards = [];\n    for (let i = 0; i < 3; i++) {\n      emptyPostCards.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-card inline empty ${i === 2 ? \"last-post\" : \"\"}`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this));\n    }\n    return emptyPostCards;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-posts\",\n    style: {\n      display: \"inline-block\",\n      width: \"23%\",\n      margin: \"10px\",\n      padding: \"10px\",\n      border: \"1px solid black\",\n      height: \"300px\"\n    },\n    children: [posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `post-card inline ${index % 3 === 2 ? \"last-post\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Post Title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"16px\",\n          marginBottom: \"5px\"\n        },\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Content :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"5px\"\n        },\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), posts.length < 3 && renderEmptyPostCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = UserPosts;\nexport default UserPosts;\nvar _c;\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserPosts","posts","renderEmptyPostCards","emptyPostCards","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","margin","padding","border","height","children","map","post","index","fontSize","marginBottom","title","body","id","length","_c","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/UserPost.js"],"sourcesContent":["import React from \"react\";\n\nconst UserPosts = ({ posts }) => {\n  const renderEmptyPostCards = () => {\n    const emptyPostCards = [];\n    for (let i = 0; i < 3; i++) {\n      emptyPostCards.push(\n        <div\n          key={i}\n          className={`post-card inline empty ${i === 2 ? \"last-post\" : \"\"}`}\n        />\n      );\n    }\n    return emptyPostCards;\n  };\n\n  return (\n    <div className=\"user-posts\"  style={{\n      display: \"inline-block\",\n      width: \"23%\",\n      margin: \"10px\",\n      padding: \"10px\",\n      border: \"1px solid black\",\n      height: \"300px\",\n    }}>\n      {posts.map((post, index) => (\n        <div\n          key={post.id}\n          className={`post-card inline ${index % 3 === 2 ? \"last-post\" : \"\"}`}\n        >\n          <h4>Post Title :</h4>\n          <p style={{ fontSize: \"16px\", marginBottom: \"5px\" }}>{post.title}</p>\n          <h4>Content :</h4>\n          <p style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>{post.body}</p>\n        </div>\n      ))}\n      {posts.length < 3 && renderEmptyPostCards()}\n    </div>\n  );\n};\n\nexport default UserPosts;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC/B,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,cAAc,GAAG,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,cAAc,CAACE,IAAI,eACjBN,OAAA;QAEEO,SAAS,EAAG,0BAAyBF,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,EAAG;MAAE,GAD7DA,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACH,CAAC;IACH;IACA,OAAOP,cAAc;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,YAAY;IAAEK,KAAK,EAAE;MAClCC,OAAO,EAAE,cAAc;MACvBC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,iBAAiB;MACzBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,GACCjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBtB,OAAA;MAEEO,SAAS,EAAG,oBAAmBe,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,EAAG,EAAE;MAAAH,QAAA,gBAEpEnB,OAAA;QAAAmB,QAAA,EAAI;MAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBX,OAAA;QAAGY,KAAK,EAAE;UAAEW,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAL,QAAA,EAAEE,IAAI,CAACI;MAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEX,OAAA;QAAAmB,QAAA,EAAI;MAAS;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBX,OAAA;QAAGY,KAAK,EAAE;UAAEW,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAL,QAAA,EAAEE,IAAI,CAACK;MAAI;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAN/DU,IAAI,CAACM,EAAE;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOT,CACN,CAAC,EACDT,KAAK,CAAC0B,MAAM,GAAG,CAAC,IAAIzB,oBAAoB,CAAC,CAAC;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACkB,EAAA,GArCI5B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}