{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/UserDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDetails({\n  user,\n  history\n}) {\n  _s();\n  const [currentTime, setCurrentTime] = useState(null);\n  const [clockInterval, setClockInterval] = useState(null);\n  const [isClockRunning, setIsClockRunning] = useState(true);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Function to fetch the user's posts\n    const fetchUserPosts = () => {\n      axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(response => {\n        setPosts(response.data);\n      }).catch(error => {\n        console.error('Error fetching user posts: ', error);\n      });\n    };\n\n    // Fetch user's posts when the component mounts\n    fetchUserPosts();\n\n    // Clock logic\n    const startClock = () => {\n      const intervalId = setInterval(() => {\n        if (isClockRunning) {\n          axios.get('http://worldtimeapi.org/api/timezone/Etc/UTC').then(response => {\n            setCurrentTime(response.data.utc_datetime);\n          }).catch(error => {\n            console.error('Error fetching current time: ', error);\n          });\n        }\n      }, 1000);\n      setClockInterval(intervalId);\n    };\n    startClock();\n    return () => {\n      // Cleanup: clear the clock interval when the component unmounts\n      clearInterval(clockInterval);\n    };\n  }, [user.id, user.address.city, isClockRunning]);\n  const toggleClock = () => {\n    setIsClockRunning(prevIsClockRunning => !prevIsClockRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-details-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"user-details-title\",\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleClock,\n        children: isClockRunning ? 'Pause Clock' : 'Start Clock'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Catch Phrase: \", user.company.catchPhrase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", user.address.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDetails, \"y2PvJmntrMEyFMuiBTHBckW/SHY=\");\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserDetails","user","history","_s","currentTime","setCurrentTime","clockInterval","setClockInterval","isClockRunning","setIsClockRunning","posts","setPosts","fetchUserPosts","get","id","then","response","data","catch","error","console","startClock","intervalId","setInterval","utc_datetime","clearInterval","address","city","toggleClock","prevIsClockRunning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","push","name","company","catchPhrase","email","phone","map","post","title","body","_c","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/UserDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserDetails({ user, history }) {\n  const [currentTime, setCurrentTime] = useState(null);\n  const [clockInterval, setClockInterval] = useState(null);\n  const [isClockRunning, setIsClockRunning] = useState(true);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Function to fetch the user's posts\n    const fetchUserPosts = () => {\n      axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`)\n        .then(response => {\n          setPosts(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching user posts: ', error);\n        });\n    };\n\n    // Fetch user's posts when the component mounts\n    fetchUserPosts();\n\n    // Clock logic\n    const startClock = () => {\n      const intervalId = setInterval(() => {\n        if (isClockRunning) {\n          axios.get('http://worldtimeapi.org/api/timezone/Etc/UTC')\n            .then(response => {\n              setCurrentTime(response.data.utc_datetime);\n            })\n            .catch(error => {\n              console.error('Error fetching current time: ', error);\n            });\n        }\n      }, 1000);\n      setClockInterval(intervalId);\n    };\n\n    startClock();\n\n    return () => {\n      // Cleanup: clear the clock interval when the component unmounts\n      clearInterval(clockInterval);\n    }\n  }, [user.id, user.address.city, isClockRunning]);\n\n  const toggleClock = () => {\n    setIsClockRunning(prevIsClockRunning => !prevIsClockRunning);\n  };\n\n  return (\n    <div className=\"user-details\">\n      <div className=\"user-details-header\">\n        <h2 className=\"user-details-title\">User Details</h2>\n        <button onClick={() => history.push('/')}>Back</button>\n      </div>\n      <div className=\"clock\">\n        <h3>Current Time</h3>\n        <p>{currentTime}</p>\n        <button onClick={toggleClock}>\n          {isClockRunning ? 'Pause Clock' : 'Start Clock'}\n        </button>\n      </div>\n      <div className=\"user-info\">\n        <div className=\"user-info-left\">\n          <h3>Name: {user.name}</h3>\n          <p>Catch Phrase: {user.company.catchPhrase}</p>\n        </div>\n        <div className=\"user-info-right\">\n          <h3>Address: {user.address.city}</h3>\n          <p>Email: {user.email}</p>\n          <p>Phone: {user.phone}</p>\n        </div>\n      </div>\n      <div className=\"user-posts\">\n        <h3>User Posts</h3>\n        {posts.map(post => (\n          <div key={post.id} className=\"post-card\">\n            <h4>{post.title}</h4>\n            <p>{post.body}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}