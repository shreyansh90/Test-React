{"ast":null,"code":"var _jsxFileName = \"/Users/shrayanshtripathi/React/demo/src/component/UserProfilePage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// UserPosts component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPosts = ({\n  posts\n}) => {\n  _s();\n  const [currentPost, setCurrentPost] = useState(null);\n\n  // Function to handle when a post is clicked\n  const handlePostClick = post => {\n    setCurrentPost(post);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setCurrentPost(null);\n  };\n\n  // Render the list of post cards\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      onClick: () => handlePostClick(post),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view-post\",\n        children: \"View Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// UserProfilePage component\n_s(UserPosts, \"bWNRi2sgjTuETtxxbX+jNlgl86c=\");\n_c = UserPosts;\nconst UserProfilePage = ({\n  match\n}) => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const [address, setAddress] = useState(null);\n\n  // Fetch the posts from the API when the component is first mounted\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => setPosts(data));\n\n    // Fetch the user's address from the API\n    fetch(\"https://jsonplaceholder.typicode.com/users/1/address\").then(response => response.json()).then(data => setAddress(data));\n  }, []);\n\n  // Render the user's address\n  const renderAddress = () => {\n    if (!address) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: address.street\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: address.suite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [address.city, \", \", address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the UserPosts component with the posts as props\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), posts.length > 0 && address ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderAddress(), /*#__PURE__*/_jsxDEV(UserPosts, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the UserProfilePage component\n_s2(UserProfilePage, \"DGbjt1UHD+dcgwE7tXQjsnM62mI=\");\n_c2 = UserProfilePage;\nexport default UserProfilePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserPosts\");\n$RefreshReg$(_c2, \"UserProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserPosts","posts","_s","currentPost","setCurrentPost","handlePostClick","post","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","title","body","id","_c","UserProfilePage","match","_s2","setPosts","address","setAddress","fetch","then","response","json","data","renderAddress","street","suite","city","zipcode","length","_c2","$RefreshReg$"],"sources":["/Users/shrayanshtripathi/React/demo/src/component/UserProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// UserPosts component\nconst UserPosts = ({ posts }) => {\n  const [currentPost, setCurrentPost] = useState(null);\n\n  // Function to handle when a post is clicked\n  const handlePostClick = (post) => {\n    setCurrentPost(post);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setCurrentPost(null);\n  };\n\n  // Render the list of post cards\n  return (\n    <div className=\"user-posts\">\n      <h3>Posts</h3>\n      {posts.map(post => (\n        <div className=\"post-card\" key={post.id} onClick={() => handlePostClick(post)}>\n          <h4>{post.title}</h4>\n          <p>{post.body}</p>\n          <button className=\"view-post\">View Post</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// UserProfilePage component\nconst UserProfilePage = ({ match }) => {\n  const [posts, setPosts] = useState([]);\n  const [address, setAddress] = useState(null);\n\n  // Fetch the posts from the API when the component is first mounted\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(data => setPosts(data));\n\n    // Fetch the user's address from the API\n    fetch(\"https://jsonplaceholder.typicode.com/users/1/address\")\n      .then(response => response.json())\n      .then(data => setAddress(data));\n  }, []);\n\n  // Render the user's address\n  const renderAddress = () => {\n    if (!address) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div>\n        <h1>Address</h1>\n        <p>{address.street}</p>\n        <p>{address.suite}</p>\n        <p>{address.city}, {address.zipcode}</p>\n      </div>\n    );\n  };\n\n  // Render the UserPosts component with the posts as props\n  return (\n    <div className=\"user-profile\">\n      <h1>User Profile</h1>\n      {posts.length > 0 && address ? (\n        <div>\n          {renderAddress()}\n          <UserPosts posts={posts} />\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\n// Export the UserProfilePage component\nexport default UserProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}